{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/QrCode.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","alt","QrCode","useState","msg","setMsg","mode","console","log","bridge","send","then","data","code_data","catch","error","error_data","error_reason","weight","style","marginBottom","App","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.55aba8f0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Defly</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tКто тут\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"qrCode\">\n\t\t\t\t\tQR code\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n// import persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tРабота\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src='https://i.pinimg.com/564x/e9/b9/19/e9b91905d33309fea5dcd6112ad6a63d.jpg' alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport {IOS, platform} from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\n\n// import persik from '../img/persik.png';\nconst osName = platform();\n\nconst QrCode = props => {\n\tconst [msg, setMsg] = useState(null);\n    const scan = () => {\n        console.log('click scan:')\n\t\tbridge.send(\"VKWebAppOpenCodeReader\", {})\n\t\t\t.then(data => {\n\t\t\t\t// Обработка события в случае успеха\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetMsg('data: ' + data.code_data)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log('error:', error)\n\t\t\t\tsetMsg('error: ' + error.error_data.error_reason)\n\t\t\t});\n    };\n    return (\n        <Panel id={props.id}>\n            <PanelHeader\n                left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                </PanelHeaderButton>}\n            >\n                QrCode\n            </PanelHeader>\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <Button size=\"xl\" mode=\"outline\" level=\"2\" onClick={scan} data-to=\"qrCode\">\n                        scan\n                    </Button>\n                </Div>\n            </Group>\n\t\t\t<Div>\n\t\t\t\t<Text weight=\"regular\" style={{ marginBottom: 16 }}>{msg}</Text>\n\t\t\t</Div>\n        </Panel>\n    )\n};\n\nQrCode.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default QrCode;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport QrCode from './panels/QrCode';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<QrCode id='qrCode' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","// import \"core-js/features/map\";\n// import \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}